
plugins {
//    id "org.asciidoctor.jvm.convert" version "3.3.2" // AsciiDoc 파일을 컨버팅하고 Build 폴더에 복사하기 위한 플러그인
    id 'com.epages.restdocs-api-spec' version '0.16.4'  // Rest Docs -> Open API 3 스팩으로 출력하는 Gradle task가 포함
    id 'org.hidetake.swagger.generator' version '2.18.2'   // openapi3.yml로 swagger UI 생성하는 swagger generator 플러그인 추가.
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-validation")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    testImplementation 'org.testng:testng:7.7.0'
    // adoc 파일에서 사용할 snippets 속성이 자동으로 build/generated-snippets를 가리키도록 해준다.
//    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    runtimeOnly("com.h2database:h2")
    testImplementation("org.springframework.restdocs:spring-restdocs-mockmvc")
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.16.4'   // Rest Docs -> Open API

    swaggerUI 'org.webjars:swagger-ui:4.11.1'   // swaggerUI 의존성 추가
}

openapi3 {  // openapi3로 Opnen API 3 스팩을 만들 때 필요한 부가정보
    server = 'https://localhost:8080'
    title = 'My API'
    description = 'My API description'
//    tagDescriptionsPropertiesFile = 'src/docs/tag-descriptions.yaml'
    version = '0.1.0'
    format = 'yaml'
}

swaggerSources {    // swaggerSources 설정
  sample {
      setInputFile(file("${project.buildDir}/api-spec/openapi3.yaml"))
  }
}

// 3.4. Task 및 설정 추가
// 3.4.1
// GenerateSwaggerUI 태스크가, openapi3 task 를 의존하도록 설정
tasks.withType(GenerateSwaggerUI).configureEach {
    dependsOn 'openapi3'
}

// 3.4.2
// 생성된 SwaggerUI 를 jar 에 포함시키기 위해 build/resources 경로로 로 복사
tasks.register('copySwaggerUI', Copy) {
    dependsOn 'generateSwaggerUISample'
    def generateSwaggerUISampleTask = tasks.named('generateSwaggerUISample', GenerateSwaggerUI).get()
    from("${generateSwaggerUISampleTask.outputDir}")
    into("${project.buildDir}/resources/main/static/docs")
}

// 3.4.3
// bootJar 실행 전, copySwaggerUI 를 실행하도록 설정
bootJar {
    dependsOn 'copySwaggerUI'
}

//configurations {
//    asciidoctorExt
//}

//ext {
//    snippetsDir = file('build/generated-snippets')  // snippets 파일이 저장될 경로 snippetsDir로 변수 설정
//}

//test {
//    outputs.dir snippetsDir // 출력할 디렉토리를 snippetsDir로 설정
//}

//asciidoctor {
//    configurations 'asciidoctorExt'     // Asciidoctor에서 asciidoctorExt 설정을 사용하도록 설정
//    baseDirFollowsSourceFile()          // .adoc파일에서 다른 .adoc을 include하는 경우 동일한 경로를 baseDir로 설정
//    inputs.dir snippetsDir              // input 디렉토리를 snippetsDir로 설정
//    dependsOn test                      // gradle build 시 test -> asciidoctor 순으로 수행
//}
//
//asciidoctor.doFirst {
//    delete file('src/main/resources/static/docs') // 기존에 생성된 파일 삭제
//}
//
//tasks.register('createDocument', Copy) {
//    dependsOn asciidoctor
//    from file("build/docs/asciidoc")
//    into file("src/main/resources/static")
//}
//
//bootJar {
//    dependsOn createDocument   // gradle build 시 asciidoctor -> bootJar 순으로 수행
//    /**
//     * gradle build 시 ./build/asciidoc/html5/ 에 html 파일이 생성
//     * 이것을 jar 안에 /static/docs/ 폴더에 복사가 됩니다.
//     */
//    from ("${asciidoctor.outputDir}") {
//        into 'static/docs'
//    }
//}